.TH "serenity::expiremental::targets::ColorConsole" 3 "Mon Jan 31 2022" "Serenity Logger" \" -*- nroff -*-
.ad l
.nh
.SH NAME
serenity::expiremental::targets::ColorConsole \- This class is in charge of logging to the terminal and supports color logging and the ability to log without color\&. This class inherits from the \fBTargetBase\fP class for common logging functions and logging settings\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ColorConsoleTarget\&.h>\fP
.PP
Inherits \fBserenity::expiremental::targets::TargetBase\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBColorConsole\fP ()"
.br
.RI "Default constructor that will set the logger name to 'Console_Logger'\&. All other settings to their defaults\&. "
.ti -1c
.RI "\fBColorConsole\fP (std::string_view name)"
.br
.RI "Constructor that will set the logger name to the parameter \fCname\fP passed in\&. All other settings to their defaults\&. "
.ti -1c
.RI "\fBColorConsole\fP (std::string_view name, std::string_view msgPattern)"
.br
.RI "Constructor that will set the logger name to the parameter \fCname\fP passed in and set the format pattern via the parameter \fCmsgPattern\fP passed in\&. All other settings to their defaults\&. "
.ti -1c
.RI "\fB~ColorConsole\fP ()"
.br
.RI "If the output wasn't directed to a terminal, will flush the contents\&. "
.ti -1c
.RI "std::string_view \fBGetMsgColor\fP (LoggerLevel level)"
.br
.RI "Returns the log level based color for the current message to use\&. "
.ti -1c
.RI "void \fBSetMsgColor\fP (LoggerLevel level, std::string_view color)"
.br
.RI "Sets color specified for the log level specified\&. "
.ti -1c
.RI "void \fBSetConsoleInterface\fP (console_interface mode)"
.br
.RI "Sets console mode\&. Console modes mirror standard outputs\&. "
.ti -1c
.RI "const console_interface \fBConsoleInterface\fP ()"
.br
.RI "Returns the current console mode being used\&. "
.ti -1c
.RI "void \fBColorizeOutput\fP (bool colorize)"
.br
.RI "Enables/Disables colored text output\&. "
.ti -1c
.RI "void \fBSetOriginalColors\fP ()"
.br
.RI "Initializes the default colors to use for log levels\&. "
.ti -1c
.RI "bool \fBIsTerminalType\fP ()"
.br
.RI "Checks to see if output handle is referring to a terminal type device or not\&. "
.ti -1c
.RI "bool \fBIsValidHandle\fP ()"
.br
.RI "Checks to see if output handle is valid and not empty\&. "
.ti -1c
.RI "void \fBPrintMessage\fP (std::string_view formatted) override"
.br
.RI "Outputs the message (\fCformatted\fP) to the destination output device\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This class is in charge of logging to the terminal and supports color logging and the ability to log without color\&. This class inherits from the \fBTargetBase\fP class for common logging functions and logging settings\&. 

For all Console Target Constructors: 
.br
.IP "\(bu" 2
will set the console mode to 'console_interface::stdout' 
.br

.IP "\(bu" 2
Initializes the default colors to use for each message level 
.br

.IP "\(bu" 2
If output is a terminal and hasn't been redirected and if the output handle is valid, enables color output 
.br

.IP "\(bu" 2
Sets 'ENABLE_VIRTUAL_TERMINAL_PROCESSING' flag if on Windows Platform 
.br
 
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "serenity::expiremental::targets::ColorConsole::ColorConsole (std::string_view name)\fC [explicit]\fP"

.PP
Constructor that will set the logger name to the parameter \fCname\fP passed in\&. All other settings to their defaults\&. 
.PP
\fBParameters\fP
.RS 4
\fIname\fP the name that the logger itself will use and be identified by 
.RE
.PP

.PP
References \fBIsTerminalType()\fP, \fBIsValidHandle()\fP, \fBSetConsoleInterface()\fP, \fBSetOriginalColors()\fP, and \fBserenity::expiremental::targets::TargetBase::WriteToBaseBuffer()\fP\&.
.SS "serenity::expiremental::targets::ColorConsole::ColorConsole (std::string_view name, std::string_view msgPattern)\fC [explicit]\fP"

.PP
Constructor that will set the logger name to the parameter \fCname\fP passed in and set the format pattern via the parameter \fCmsgPattern\fP passed in\&. All other settings to their defaults\&. 
.PP
\fBParameters\fP
.RS 4
\fIname\fP the name that the logger itself will use and be identified by 
.br
\fImsgPattern\fP the format pattern that determines how the prepended text will be displayed before the log message 
.RE
.PP

.PP
References \fBIsTerminalType()\fP, \fBIsValidHandle()\fP, \fBSetConsoleInterface()\fP, \fBSetOriginalColors()\fP, and \fBserenity::expiremental::targets::TargetBase::WriteToBaseBuffer()\fP\&.
.SS "serenity::expiremental::targets::ColorConsole::~ColorConsole ()"

.PP
If the output wasn't directed to a terminal, will flush the contents\&. If on Windows platform, this function will also reset the console mode to default in order to to clear 'ENABLE_VIRTUAL_TERMINAL_PROCESSING' flag\&. 
.PP
References \fBIsTerminalType()\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "std::string_view serenity::expiremental::targets::ColorConsole::GetMsgColor (LoggerLevel level)"

.PP
Returns the log level based color for the current message to use\&. 
.PP
\fBParameters\fP
.RS 4
\fIlevel\fP the level used to recieve the color code for that level\&. Logger levels are trace, info, debug, warning, error, and fatal\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The ansi color code for the \fClevel\fP passed in 
.RE
.PP

.SS "void serenity::expiremental::targets::ColorConsole::PrintMessage (std::string_view formatted)\fC [override]\fP, \fC [virtual]\fP"

.PP
Outputs the message (\fCformatted\fP) to the destination output device\&. If output handle is valid, will write the message to the output\&. If color is enabled, will write the message in the color specified for the log level used if the output is to a terminal\&. For windows, uses WriteConsole( ) unless the output is not a terminal (in which case, uses WriteFile( ) ) 
.PP
\fBParameters\fP
.RS 4
\fIformatted\fP The actual message in its entirety to send to the output destination\&. 
.RE
.PP

.PP
Implements \fBserenity::expiremental::targets::TargetBase\fP\&.
.PP
References \fBIsTerminalType()\fP, \fBIsValidHandle()\fP, and \fBserenity::expiremental::targets::TargetBase::MsgInfo()\fP\&.
.SS "void serenity::expiremental::targets::ColorConsole::SetConsoleInterface (console_interface mode)"

.PP
Sets console mode\&. Console modes mirror standard outputs\&. For Windows, sets 'ENABLE_VIRTUAL_TERMINAL_PROCESSING'\&. (If not defined, a macro is used to define this value)\&. For any other platfrom, sets the standard output to use\&. The console_interface values (std_out, std_err, std_log) represent std::out, std::err, and std::clog respectively\&. 
.PP
\fBParameters\fP
.RS 4
\fImode\fP Can be one of the following: console_interface::std_out, console_interface::std_err, or console_interface::std_log 
.RE
.PP

.SS "void serenity::expiremental::targets::ColorConsole::SetMsgColor (LoggerLevel level, std::string_view color)"

.PP
Sets color specified for the log level specified\&. 
.PP
\fBParameters\fP
.RS 4
\fIlevel\fP The logger level to bind the color code to from @color 
.br
\fIcolor\fP The color code to bind to the \fClevel\fP passed in\&. This color code is expected to be an ansi code\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Serenity Logger from the source code\&.
